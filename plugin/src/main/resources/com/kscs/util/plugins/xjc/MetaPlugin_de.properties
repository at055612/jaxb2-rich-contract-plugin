#
# MIT License
#
# Copyright (c) 2014 Klemm Software Consulting, Mirko Klemm
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
usage=XJC-Plugin zum Erzeugen von Metadaten f\u00FCr eine JAXB-Klasse. Generiert eine innere Klasse mit statischen \
  Feldern, die jeweils Informationen \u00FCber die einzelnen Eigenschaften enthalten.
usage.camelCase=Namen der Konstanten wie Feldnamen generieren, nicht nach Java-Konstanten-Konvention.
usage.metaClassName=Name der generierten inneren Metainfoklasse.
usage.extended=Generiere erweiterte Metadaten f\u00FCr jedes Property: Name, Typ, Multiplizit\u00E4t, Standardwert
usage.generateTools=Generiere die Hilfsklasse zur Darstellung der erweiterten Metadaten als Quelltext.\n\
  Wenn hier "n" angegeben wird und "extended=y", so muss das plugin JAR zur Laufzeit im Klassenpfad der client-Anwendung sein.
usage.allowSet=Generiere eine M\u00F6glichkeit, den Wert eines Propertys \u00FCber die Metadaten zu \u00E4ndern.
usage.visitMethodName=Name der Methode, mit der ein Visitor durch das Objekt geschickt werden kann.
error.metaClassExists=Innere Klasse "{0}.{1}" kann nicht generiert werden, da schon eine gleichnamige Klasse existiert.
