usage=Erzeugt die Eigenschaften der generierten Klassen als "Bound Properties" oder "Constrained Properties" wie in der JavaBeans-Spezifikation vorgesehen.
usage.constrained=Erzeuge "constrained properties", die durch das Werfen einer  Exception eine \u00C4nderung ihres Zustandes unterbinden k\u00F6nnen.
usage.bound=Erzeuge "bound properties", die die \u00C4nderung ihres Zustandes als Event weitermelden.
usage.setterThrows=Wenn Constrained Properties verwendet werden, soll eine PropertyVetoException bei unerlaubter Zustands\u00E4nderung geworfen werden.\n\
  Wenn dies auf "no" gesetzt ist, wird stattdessen eine "RuntimeException" erzeugt.
usage.constrainedPropertiesGenerateTools=Die f\u00FCr die Verarbeitung von \u00C4nderungen an Collection-Eigenschaften notwendigen zus\u00E4tzlichen Klassen werden in den generierten Quelltext \
  aufgenommen (y). Wird hier "no" angegeben, muss das JAR des XJC-Plugins in den Laufzeit-Klassenpfad der generierten Anwendung mit aufgenommen werden.
usage.generateTools=Generiere die Hilfsklassen, die zur Realisierung der nicht-standardkonformen "Collection Changed" events gebraucht werden, als Quelltext.
error.immutableAndConstrainedProperties=Das "Immutable"-Plugin kann nicht zusammen mit dem "Constrained-Properties" plugin verwendet werden. Ein Objekt ist entweder unver\u00E4nderlich, oder es kann \u00C4nderungsnachrichten senden.