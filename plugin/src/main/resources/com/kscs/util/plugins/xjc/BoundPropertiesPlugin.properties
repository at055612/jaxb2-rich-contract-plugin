usage=Generate bound properties for JAXB serializable classes.
usage.constrained=switch "constrained" property contract generation on/off. Default: yes
usage.bound=switch "bound" property contract generation on/off. Default: yes
usage.setterThrows=Declare setXXX methods to throw PropertyVetoException (yes), or rethrow as RuntimeException (no). Default: no
usage.generateTools=Generate helper classes needed for collection change event detection. Turn off in modules that import other generated modules. Default: yes
error.immutableAndConstrainedProperties="Immutable" plugin cannot be used together with "constrained-properties" plugin. An object can either be immutable, or it can send change notifications.
doc.motivation=Many GUI applications use data binding to connect the data model to the view components. The JavaBeans standard defines a simple component model that also supports properties which send notifications whenever the are about to be changed, and there are even vetoable changes that allow a change listener to inhibit modification of a property. While the JAvaBeans standard is a bit dated, data binding and property change notification can come in handy in many situations, even for debugging or reverse-engineering existing code, because you can track any change made to the model instance.
doc.function=constrained-properties generates additional code in the property setter methods of the POJOs generated by XJC that allow `PropertyChangeListener`s and `VetoableChangeListener`s to be attached to any instance of a XJC-generated class.\n\n\
Currently, **indexed properties** are NOT supported in the way specified by JavaBeans, but instead, if a property represents a collection, a collection proxy class is generated that supports its own set of collection-specific change notifications, vetoable and other. This decision has been made because by default XJC generates collection properties rather than indexed properties, and indexed properties as mandated by JavaBeans are generally considered "out of style".
doc.limitations=* The JavaBeans standard is only loosely implemented in the generated classes.\n\
* Indexed Properties as defined in JavaBeans are not supported.\n\
* The CollectionChange behavior implemented by the classes is not yet documented and non-standard.
